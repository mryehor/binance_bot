from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update # pyright: ignore[reportMissingImports]
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes # pyright: ignore[reportMissingImports]
import matplotlib.pyplot as plt # pyright: ignore[reportMissingImports]
from io import BytesIO
from pos_manager import user_data_cache, INITIAL_CASH  # —Ç–≤–æ–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
from logger import realized_total_pnl
# –§–ª–∞–≥ –ø–∞—É–∑—ã —Ç–æ—Ä–≥–æ–≤–ª–∏
TRADING_PAUSED = False

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("‚è∏ –ü–∞—É–∑–∞/–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å", callback_data="toggle_pause")],
        [InlineKeyboardButton("üí∞ –ë–∞–ª–∞–Ω—Å –∏ –ø–æ–∑–∏—Ü–∏–∏", callback_data="balance")],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–ª–µ–π:", reply_markup=reply_markup)

async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global TRADING_PAUSED
    query = update.callback_query
    await query.answer()

    if query.data == "toggle_pause":
        TRADING_PAUSED = not TRADING_PAUSED
        state = "‚è∏ –ü–∞—É–∑–∞" if TRADING_PAUSED else "‚ñ∂Ô∏è –¢–æ—Ä–≥–æ–≤–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∞"
        await query.edit_message_text(text=f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {state}")

    elif query.data == "balance":
        balance = INITIAL_CASH + realized_total_pnl
        positions = user_data_cache.get("positions", {})
        text = f"üí≥ –ë–∞–ª–∞–Ω—Å: {balance:.2f}\n"
        text += "üìå –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏:\n"
        if positions:
            for sym, info in positions.items():
                text += f"- {sym}: {info}\n"
        else:
            text += "–ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π"
        await query.edit_message_text(text=text)

    elif query.data == "stats":
        # –ü—Ä–∏–º–µ—Ä –≥—Ä–∞—Ñ–∏–∫–∞ PnL (–∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
        equity_history = user_data_cache.get("equity_history", [INITIAL_CASH])
        plt.figure(figsize=(6,4))
        plt.plot(equity_history, marker='o')
        plt.title("–ò—Å—Ç–æ—Ä–∏—è –±–∞–ª–∞–Ω—Å–∞")
        plt.xlabel("–¢–∏–∫")
        plt.ylabel("–ë–∞–ª–∞–Ω—Å")
        buf = BytesIO()
        plt.savefig(buf, format='png')
        buf.seek(0)
        await query.edit_message_text("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–ª–∞–Ω—Å–∞:")
        await context.bot.send_photo(chat_id=query.message.chat_id, photo=buf)
        buf.close()
